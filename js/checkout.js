
/**
 * –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
 */

document.addEventListener('DOMContentLoaded', function() {
  initializeCheckout();
});

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
 */
function initializeCheckout() {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ñ–æ—Ä–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
  const checkoutForm = document.getElementById('checkout-form');
  if (!checkoutForm) return;
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
  setupFormHandlers();
  setupContactMethodHandlers();
  loadCartItems();
}

/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Ñ–æ—Ä–º—ã
 */
function setupFormHandlers() {
  const checkoutForm = document.getElementById('checkout-form');
  
  checkoutForm.addEventListener('submit', function(e) {
    e.preventDefault();
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
    const formData = collectFormData();
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
    if (!validateFormData(formData)) return;
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑
    submitOrder(formData)
      .then(success => {
        if (!success) {
          showNotification('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞', 'error');
        }
      })
      .catch(error => {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞:', error);
        showNotification('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞', 'error');
      });
  });
}

/**
 * –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
 */
function collectFormData() {
  return {
    name: document.getElementById('name').value,
    phone: document.getElementById('phone').value,
    email: document.getElementById('email').value,
    address: document.getElementById('address').value,
    comment: document.getElementById('comment')?.value,
    contact_method: document.querySelector('input[name="contact_method"]:checked').value,
    delivery_method: document.querySelector('input[name="delivery_method"]:checked')?.value || 'cdek',
    telegram_username: document.getElementById('telegram_username')?.value
  };
}

/**
 * –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
 */
function validateFormData(formData) {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
  if (!formData.name || !formData.phone || !formData.email || !formData.address) {
    showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è', 'error');
    return false;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ username –∑–∞–ø–æ–ª–Ω–µ–Ω –¥–ª—è Telegram
  if (formData.contact_method === 'telegram' && !formData.telegram_username) {
    showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à Telegram username', 'error');
    return false;
  }
  
  return true;
}

/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–ø–æ—Å–æ–±–∞ —Å–≤—è–∑–∏
 */
function setupContactMethodHandlers() {
  const contactMethodRadios = document.querySelectorAll('input[name="contact_method"]');
  const telegramUsernameContainer = document.getElementById('telegram-username-container');
  
  contactMethodRadios.forEach(radio => {
    radio.addEventListener('change', function() {
      if (this.value === 'telegram') {
        telegramUsernameContainer.style.display = 'block';
        document.getElementById('telegram_username').setAttribute('required', '');
      } else {
        telegramUsernameContainer.style.display = 'none';
        document.getElementById('telegram_username').removeAttribute('required');
      }
    });
  });
}

/**
 * –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
 */
function loadCartItems() {
  // –ü–æ–ª—É—á–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
  const cart = getFromStorage('cart', []);
  
  if (cart.length === 0) {
    window.location.href = 'cart.html';
    return;
  }
  
  // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
  populateCheckoutItems(cart);
}

/**
 * –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞
 */
function populateCheckoutItems(cart) {
  const checkoutItemsContainer = document.getElementById('checkout-items');
  checkoutItemsContainer.innerHTML = '';
  
  let subtotal = 0;
  
  cart.forEach(item => {
    const itemPrice = item.price || 0;
    const itemTotal = itemPrice * item.quantity;
    subtotal += itemTotal;
    
    const itemHTML = `
      <div class="checkout-item">
        <div class="checkout-item-image">
          <img src="${item.image}" alt="${item.title}">
        </div>
        <div class="checkout-item-title">${item.title}</div>
        <div class="checkout-item-quantity">x${item.quantity}</div>
        <div class="checkout-item-price">${formatPrice(itemTotal)}</div>
      </div>
    `;
    
    checkoutItemsContainer.innerHTML += itemHTML;
  });
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å
  document.getElementById('subtotal').textContent = formatPrice(subtotal);
  document.getElementById('grand-total').textContent = formatPrice(subtotal);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
async function submitOrder(formData) {
  try {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–æ—Ä–∑–∏–Ω—É –∏–∑ localStorage
    const cart = getFromStorage('cart', []);
    
    if (cart.length === 0) {
      showNotification('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞', 'error');
      return false;
    }
    
    // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∑–∞–∫–∞–∑–∞
    const order = createOrderObject(formData, cart);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É –≤ Telegram
    try {
      await sendOrderToTelegram(order);
      console.log('–ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram');
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞ –≤ Telegram:', err);
      // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞–∫–∞–∑–∞, –¥–∞–∂–µ –µ—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram –Ω–µ —É–¥–∞–ª–∞—Å—å
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–∫–∞–∑ –≤ –∏—Å—Ç–æ—Ä–∏—é
    saveOrderToHistory(order);
    
    // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
    clearCart();
    
    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏
    window.location.href = 'thank-you.html?order_id=' + order.id;
    
    return true;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞:', error);
    showNotification('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞', 'error');
    return false;
  }
}

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∑–∞–∫–∞–∑–∞
 */
function createOrderObject(formData, cart) {
  return {
    id: 'order_' + Date.now(),
    items: cart,
    customer: {
      name: formData.name,
      phone: formData.phone,
      email: formData.email,
      address: formData.address,
      comment: formData.comment || '',
      contact_method: formData.contact_method || 'phone',
      delivery_method: formData.delivery_method || 'cdek',
      telegram_username: formData.telegram_username || ''
    },
    totalPrice: cart.reduce((total, item) => {
      const itemPrice = typeof item.price === 'number' ? item.price : 0;
      return total + (itemPrice * item.quantity);
    }, 0),
    status: 'new',
    created: new Date().toISOString()
  };
}

/**
 * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é
 */
function saveOrderToHistory(order) {
  // –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  let orders = getFromStorage('orders', []);
  
  // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑ –≤ –∏—Å—Ç–æ—Ä–∏—é
  orders.push(order);
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –∑–∞–∫–∞–∑–æ–≤
  saveToStorage('orders', orders);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞ –≤ Telegram
async function sendOrderToTelegram(order) {
  try {
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    const message = formatTelegramMessage(order);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram API
    const TELEGRAM_TOKEN = CONFIG.telegramBotToken;
    const CHAT_ID = CONFIG.telegramChatId;
    
    if (!TELEGRAM_TOKEN || !CHAT_ID || TELEGRAM_TOKEN === 'your_telegram_bot_token' || CHAT_ID === 'your_telegram_chat_id') {
      console.error('–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram');
      return false;
    }
    
    const url = `https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage`;
    const response = await fetch(url, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        chat_id: CHAT_ID,
        text: message,
        parse_mode: 'HTML'
      })
    });
    
    if (!response.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
    }
    
    return await response.json();
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞ –≤ Telegram:', error);
    throw error;
  }
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è Telegram
 */
function formatTelegramMessage(order) {
  return `
üì¶ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ #${order.id}

üë§ –ö–ª–∏–µ–Ω—Ç:
- –§–ò–û: ${order.customer.name}
- –¢–µ–ª–µ—Ñ–æ–Ω: ${order.customer.phone}
- Email: ${order.customer.email}
- –ê–¥—Ä–µ—Å: ${order.customer.address}
- –°–ø–æ—Å–æ–± —Å–≤—è–∑–∏: ${getContactMethodText(order.customer.contact_method)}${order.customer.telegram_username ? `\n- Telegram: ${order.customer.telegram_username}` : ''}
- –°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏: ${getDeliveryMethodText(order.customer.delivery_method)}
${order.customer.comment ? `- –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${order.customer.comment}` : ''}

üõí –¢–æ–≤–∞—Ä—ã:
${order.items.map(item => `- ${item.title} (${item.quantity} —à—Ç.) - ${formatPrice(item.price * item.quantity)}`).join('\n')}

üí∞ –ò—Ç–æ–≥–æ: ${formatPrice(order.totalPrice)}
`;
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å–ø–æ—Å–æ–±–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
 */
function getDeliveryMethodText(method) {
  switch(method) {
    case 'russianpost': return '–ü–æ—á—Ç–∞ –†–§';
    case 'cdek': return '–°–î–≠–ö';
    case 'wbtrack': return 'WB Track';
    default: return method;
  }
}

// –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ —Å–ø–æ—Å–æ–±–∞ —Å–≤—è–∑–∏ –≤ —á–∏—Ç–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç
function getContactMethodText(method) {
  switch(method) {
    case 'phone': return '–ü–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É';
    case 'telegram': return 'Telegram';
    case 'whatsapp': return 'WhatsApp';
    default: return method;
  }
}
